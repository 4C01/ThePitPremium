# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
    - name: Read version
      id: version
      run: |
        echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
    - name: Make gradlew executable
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew shadowJar
    

    - name: Upload JAR to FTP
      uses: modern-dev/ftp-mirror@v2
      with:
        exclude: classes generated-sources maven-archiver maven-status
        server: ${{ secrets.FTP_SERVER }}
        user: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local_dir: build/libs
        remote_dir: 4C01/ThePitPremium
    

    - name: Create Tag
      uses: softprops/action-gh-release@v1
      with:
        files: build/libs/ThePitPremium-${{env.VERSION}}.jar
        generate_release_notes: true
        name: ${{env.VERSION}}
        tag_name: ${{env.VERSION}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
